{"version":3,"sources":["webpack:///./src/templates/tag.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/layout.js"],"names":["__webpack_require__","r","__webpack_exports__","d","query","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby__WEBPACK_IMPORTED_MODULE_1__","_components_layout__WEBPACK_IMPORTED_MODULE_2__","_ref","pageContext","data","a","createElement","tag","allMarkdownRemark","nodes","map","node","to","fields","slug","excerpt","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","React","createContext","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","propTypes","shape","children"],"mappings":"0FAAAA,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,0BAAAE,IAAA,IAAAC,EAAAL,EAAA,GAAAM,EAAAN,EAAAO,EAAAF,GAAAG,EAAAR,EAAA,KAAAS,EAAAT,EAAA,KAKeE,EAAA,iBAAAQ,GAAA,IAAGC,EAAHD,EAAGC,YAAaC,EAAhBF,EAAgBE,KAAhB,OACbN,EAAAO,EAAAC,cAACL,EAAA,EAAD,KACEH,EAAAO,EAAAC,cAAA,mBAGAR,EAAAO,EAAAC,cAAA,kBAAUH,EAAYI,KACtBT,EAAAO,EAAAC,cAAA,WACAR,EAAAO,EAAAC,cAAA,UACGF,EAAKI,kBAAkBC,MAAMC,IAAI,SAAAC,GAAI,OACpCb,EAAAO,EAAAC,cAAA,UACER,EAAAO,EAAAC,cAACN,EAAA,EAAD,CAAMY,GAAID,EAAKE,OAAOC,MAAOH,EAAKI,eAOrC,IAAMnB,EAAK,+CCtBlB,IAAAC,EAAAL,EAAA,GAAAM,EAAAN,EAAAO,EAAAF,GAAAmB,EAAAxB,EAAA,GAAAyB,EAAAzB,EAAAO,EAAAiB,GAAAE,EAAA1B,EAAA,IAAA2B,EAAA3B,EAAAO,EAAAmB,GAAA1B,EAAAG,EAAAD,EAAA,sBAAAyB,EAAAd,IAAAb,EAAA,KAa2B4B,IAAMC,cAAc,IA0CvCC,IAAUC,OACTD,IAAUE,OAAOC,WAChBH,IAAUI,KACRJ,IAAUI,0BC1DtB,IAAsBC,EAKpBC,EAAOC,SALaF,EAKWG,EAAQ,OALRH,EAAEI,SAAYJ,oGCMzCK,EAAmB,SAAA9B,GAAkB,IAAf+B,EAAe/B,EAAf+B,SACpBC,EAAgBC,UAAOC,4BAA4BH,EAASI,UAClE,OAAKH,EAIEd,IAAMd,cAAcgC,IAApBC,OAAAC,OAAA,CACLP,WACAC,iBACGA,EAAcO,OANV,MAUXT,EAAiBU,UAAY,CAC3BT,SAAUX,IAAUqB,MAAM,CACxBN,SAAUf,IAAUE,OAAOC,aAC1BA,YAGUO,8CCzBf,IAAAnC,EAAAL,EAAA,GAAAM,EAAAN,EAAAO,EAAAF,GAAAG,EAAAR,EAAA,KAGeE,EAAA,WAAAQ,GAAA,IAAG0C,EAAH1C,EAAG0C,SAAH,OACb9C,EAAAO,EAAAC,cAAA,WACER,EAAAO,EAAAC,cAACN,EAAA,EAAD,CAAMY,GAAE,KAAR,aADF,MAGEd,EAAAO,EAAAC,cAACN,EAAA,EAAD,CAAMY,GAAE,SAAR,YACAd,EAAAO,EAAAC,cAAA,WACCsC","file":"component---src-templates-tag-js-a3439a985f9e4c159f93.js","sourcesContent":["import React from 'react'\nimport { graphql, Link } from 'gatsby'\n\nimport Layout from '../components/layout'\n\nexport default ({ pageContext, data }) => (\n  <Layout>\n    <h1>\n      Posts\n    </h1>\n    <h2>Tag: {pageContext.tag}</h2>\n    <hr />\n    <ul>\n      {data.allMarkdownRemark.nodes.map(node =>\n        <li>\n          <Link to={node.fields.slug}>{node.excerpt}</Link>\n        </li>\n      )}\n    </ul>\n  </Layout>\n)\n\nexport const query = graphql`\n  query($tag: String!) {\n    allMarkdownRemark(\n      filter: { frontmatter: { tags: { elemMatch: { tag: { eq: $tag } } } } }\n    ) {\n      nodes {\n        excerpt(pruneLength: 15)\n        fields {\n          slug\n        }\n      }\n    }\n  }\n`","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  if (!pageResources) {\n    return null\n  }\n\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react'\nimport { Link } from 'gatsby'\n\nexport default ({ children }) => (\n  <div>\n    <Link to={`/`}>All Posts</Link>\n    {` | `}\n    <Link to={`/tags`}>All Tags</Link>\n    <hr />\n    {children}\n  </div>\n)"],"sourceRoot":""}